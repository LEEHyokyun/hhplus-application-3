spring:
  kafka:
	consumer:
		bootstrap-servers: localhost:9092 # Kafka 클러스터(브로커)의 주소
		group-id: platform # consumer group을 관리하기 위한 식별자
		auto-offset-reset: earliest
		key-deserializer: org.apache.kafka.common.serialization.StringDeserializer # Kafka 메시지 key 역직렬화(*1단계 - 단순 문자열)
		value-deserializer: org.apache.kafka.common.serialization.StringDeserializer # Kafka 메시지의 value를 역직렬화(*1단계 - 단순 문자열)
	producer:
		bootstrap-servers: localhost:9092 # Kafka 클러스터(브로커)의 주소
		key-serializer: org.apache.kafka.common.serialization.StringSerializer  # Kafka 메시지 key 역직렬화(*1단계 - 단순 문자열)
		value-serializer: org.apache.kafka.common.serialization.StringSerializer # Kafka 메시지의 value를 역직렬화(*1단계 - 단순 문자열)
  data:
	redis:
		host: localhost
		port:6379
		password:1234
  application:
    name: server-java
  profiles:
    active: local
  datasource:
    name: HangHaePlusDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 3
      connection-timeout: 10000
      max-lifetime: 60000
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC

---
spring.config.activate.on-profile: local, test

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application